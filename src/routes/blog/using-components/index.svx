---
title: Using components
tags:
  - introduction
  - components
date: 2021-03-05
---

<script>
  import Counter from "./Counter.svelte";
  let value;
</script>

# Creating interactive components

<Counter bind:count={value} />

_A component using javascript for interactivity_

One of the really fun parts of [svelte](https://svelte.dev/tutorial/basics) is that you can write components in html, css, and javascript.
These components can be reactive, that's one of the features you get from svelte.

I've got a super small component in this directory with me in the `Counter.svelte` file.

```
using-components
├── Counter.svelte
└── index.svx
```


Here's the contents of the `Counter.svelte`:


```javascript
<script>
  export let count = 0;
</script>


<span>
  <button on:click="{() => count = count -1 }">-</button>
  {count}
  <button on:click="{() => count = count +1 }">+</button>
</span>
```

Note a couple of things.
Two buttons that have `on:click` functions from svelte.
The component also has a `count` property. 

Here's how I import it into my `svx` file:

```html
<script>
  import Counter from "./Counter.svelte";
  let value;
</script>
```




And here's how I use it.


```html
<Counter bind:count={value} />
```
   
<Counter bind:count={value} />

Since I've bound my component to the `value` variable that I defined above, 
it means I have access to it in this page.
What's the current value of `count`?
Well I just type in `{count}` and there I go.

Value of `value` is currently: {value}

I can also use d3 for data visualisation, described in the [next section](/blog/d3-components)
